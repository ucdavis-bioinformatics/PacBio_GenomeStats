shiny::runApp()
ls()
dir()
library(rjson)
rjson:::fromJSON("../test_data/input.fofn.stats")
rjson:::fromJSON(file="../test_data/input.fofn.stats")
json <- rjson:::fromJSON(file="../test_data/input.fofn.stats")
length(json)
names(json)
json$file_data
length(json$file_data)
length(json$file_data[1])
length(json$file_data[[1]])
names(json$file_data)
names(json$file_data$zmw)
json$file_keys$zmw
json$file_keys$["zmw"]
json$file_keys["zmw"]
json$file_data$zmw
length(json$file_data$zmw)
length(json$file_data$run_id
)
library(RJSON)
library(rjson)
json <- rjson:::fromJSON(file="../test_data/input.fofn.stats")
length(json)
names(json)
json$id
json$format
json$generated_by
json$date
json$number_of_files
json$file_keys
length(json$file_data)
length(json$file_data[1])
json$file_data[1]
json$file_data[[1]]
names(json$file_data[[1]])
names(json$file_data[1])
names(json$file_data[[1]]$filename)
json$file_data[[1]]$filename
sapply(json$file_data,"[[","filename")
sapply(json$file_data,"[[","zmw)
")"
""
sapply(json$file_data,"[[","zmw")
sapply(json$file_data,"[","zmw")
do.call(sapply(json$file_data,"[[","zmw"),'c')
do.call('c',sapply(json$file_data,"[[","zmw"))
length(do.call('c',sapply(json$file_data,"[[","zmw")))
table(do.call('c',sapply(json$file_data,"[[","zmw")))
range(table(do.call('c',sapply(json$file_data,"[[","zmw"))))
136/3
do.call('c',sapply(json$file_data,"[[","zmw"))
json$file_keys
len <- do.call('c',sapply(json$file_data,"[[","read_lengths"))
len
hist(len,breaks=200)
hist(len,breaks=200)
sum(len)
sum(len)/600e6
sum(len[len>10e3])/600e6
sum(len[len>120e3])/600e6
sum(len[len>20e3])/600e6
len[len>20e3]
sum(len[len>20e3])/1000e6
length(json$number_of_files)
json$number_of_files
sapply(json$file_data,"[[","file_name")
138/3
sum(len[len>20e3])/1000e6
sum(len[len>12e3])/1000e6
install.packages("devtools")
library(devtools)
install_github("trestletech/shinyTree")
library(shinyTree)
library(shiny)
runApp(system.file("examples/05-structure", package="shinyTree"))
library(shiny)
runApp(system.file("examples/04-selected", package="shinyTree"))
library(shiny)
runApp(system.file("examples/03-checkbox", package="shinyTree"))
system.file("examples/03-checkbox", package="shinyTree")
runApp()
runApp()
runApp()
?fileInput
runApp()
runApp()
runApp()
runApp()
runApp()
?stselected
runApp()
runApp()
runApp()
runApp()
library(rjson)
jd <- fromJSON(file="../test_data/")
jd <- fromJSON(file="../test_data/input.fofn.stats")
jd
jd$file_data,"[[","filename")
sapply(jd$file_data,"[[","filename")
lapply(jd$file_data,"[[","filename")
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp(system.file("examples/03-checkbox", package="shinyTree"))
runApp()
runApp()
runApp()
runApp()
hist(c(0))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?structure
setwd("../bin")
file = "input.fofn.stats"
library(rjson)
infile = "input.fofn.stats"
print(infile)
json <- fromJSON(file=infile)
head(json)
names(json)
json$number_of_files
json$file_keys
json$file_data[[11]]
json$file_data[[1]]
nameS(json$file_data[[1]])
names(json$file_data[[1]])
json$file_data[[1]]$run_id
sapply(json$file_data,"[[","run_id")
table(sapply(json$file_data,"[[","run_id")
)
table(sapply(json$file_data,"[[","cell_barcode"))
json$file_keys
json$file_keys
tapply(sapply(json$file_data,'[[','read_lengths'),sapply(json$file_data,'[[','cell_barcode'), do.call,'c')
?do.call
tapply(sapply(json$file_data,'[[','read_lengths'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
clens <- tapply(sapply(json$file_data,'[[','read_lengths'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
length(clens)
do.call('c',clens)
hist(do.call('c',clens),breaks=200)
hist(do.call('c',clens),breaks=200,xlab="Read Length")
hist(do.call('c',clens),breaks=200,xlab="Read Length",main="Read lengths of all cells")
genome_size=1.5e9
sum(x[x>8e3])
lapply(clens,functions(x){
sum(x[x>8e3])
}
lapply(clens,functions(x){
sum(x[x>8e3])
})
lapply(clens,function(x){
sum(x[x>8e3])
})
sum(x)
lapply(clens,function(x){
sum(x)
})
sapply(clens,function(x){
sum(x[x>8e3])
})
k8 <- sapply(clens,function(x){
sum(x[x>8e3])
})
plot(k8)
plot(k8/genome_size)
plot(sumsum(k8)/genome_size)
plot(cumsum(k8)/genome_size)
plot(cumsum(k8)/genome_size,type='b')
k8 <- sapply(clens,function(x){
sum(x[x>8e3])
})
k10 <- sapply(clens,function(x){
sum(x[x>10e3])
})
k12 <- sapply(clens,function(x){
sum(x[x>12e3])
})
plot(cumsum(k8)/genome_size,type='b',color="blue")
lines(cumsum(k10)/genome_size,type='b',color="red")
plot(cumsum(k8)/genome_size,type='b',col="blue")
lines(cumsum(k10)/genome_size,type='b',col="red")
plot(cumsum(k8)/genome_size,type='b',col="red")
lines(cumsum(k10)/genome_size,type='b',col="blue")
lines(cumsum(k12)/genome_size,type='b',col="green")
lines(cumsum(k10)/genome_size,type='b',col="red")
16*3
plot(cumsum(k8)/genome_size,type='b',col="red")
lines(cumsum(k10)/genome_size,type='b',col="blue")
lines(cumsum(k12)/genome_size,type='b',col="green")
k0 <- sapply(clens,function(x){
sum(x)
})
k8 <- sapply(clens,function(x){
sum(x[x>8e3])
})
k10 <- sapply(clens,function(x){
sum(x[x>10e3])
})
k12 <- sapply(clens,function(x){
sum(x[x>12e3])
})
plot(cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number")
lines(cumsum(k8)/genome_size,type='b',col="red")
lines(cumsum(k10)/genome_size,type='b',col="blue")
lines(cumsum(k12)/genome_size,type='b',col="green")
movies
data(movies)
data("movies")
sapply(clens,function(x){
mean(x)
})
clens[[1]]
cumsum(clens[[1]])
cumsum(clens[[1]])/sum(clens[[1]])
cumsum(clens[[1]])/sum(clens[[1]])>0.5
cumsum(clens[[1]])/sum(clens[[1]])
cumsum(clens[[1]])/sum(clens[[1]])
tail(cumsum(clens[[1]])/sum(clens[[1]]))
cumsum(clens[[1]])/sum(clens[[1]]
)
cumsum(clens[[1]])/sum(clens[[1]])
cumsum(clens[[1]])/sum(clens[[1]]) >= 0.5
which(cumsum(clens[[1]])/sum(clens[[1]]) >= 0.5)
which(cumsum(clens[[1]])/sum(clens[[1]]) >= 0.5)[1]
which(cumsum(sort(clens[[1]]))/sum(sort(clens[[1]])) >= 0.5)[1]
head(sort(clens[[1]]))
tail(sort(clens[[1]]))
length(sort(clens[[1]]))
which(cumsum(sort(clens[[1]]))/sum(sort(clens[[1]])) >= 0.5)[1]
sort(clens[[1]])[which(cumsum(sort(clens[[1]]))/sum(sort(clens[[1]])) >= 0.5)[1]]
n50 <- sapply(clens,function(x){
sort(clens[x])[which(cumsum(sort(clens[x]))/sum(sort(clens[x])) >= 0.5)[1]]
})
n50 <- sapply(clens,function(x){
sort(clens[[x]])[which(cumsum(sort(clens[[x]]))/sum(sort(clens[[x]])) >= 0.5)[1]]
})
n50 <- sapply(clens,function(x){
sort(x)[which(cumsum(sort(x))/sum(sort(x)) >= 0.5)[1]]
})
n50
mlen
mlen <- sapply(clens,function(x){
mean(x)
})
mlen
lapply(clens,length)
sapply(clens,length)
plot(sapply(clens,length))
plot(sapply(clens,length))
#
# This is an R script that produces a figure
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
## Requires packages installed
#install.packages(c("rjson",devtools"))
#library(devtools)
#install_github("trestletech/shinyTree")
library(rjson)
infile = "input.fofn.stats"
genome_size=1.5e9
if (is.null(infile)) {
# User has not uploaded a file yet
return(NULL)
}
print(infile)
json <- fromJSON(file=infile)
clens <- tapply(sapply(json$file_data,'[[','read_lengths'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
hist(do.call('c',clens),breaks=200,xlab="Read Length",main="Read lengths of all cells")
k0 <- sapply(clens,function(x){
sum(x)
})
k8 <- sapply(clens,function(x){
sum(x[x>8e3])
})
k10 <- sapply(clens,function(x){
sum(x[x>10e3])
})
k12 <- sapply(clens,function(x){
sum(x[x>12e3])
})
plot(cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number",main="cmoviesoverage Increase by cell")
lines(cumsum(k8)/genome_size,type='b',col="red")
lines(cumsum(k10)/genome_size,type='b',col="blue")
lines(cumsum(k12)/genome_size,type='b',col="green")
mlen <- sapply(clens,function(x){
mean(x)
})
n50 <- sapply(clens,function(x){
sort(x)[which(cumsum(sort(x))/sum(sort(x)) >= 0.5)[1]]
})
barplot(sapply(clens,length))
setwd("../bin/")
setwd("../test_data/")
library(rjson)
source('~/CodeProjects/PacBio_GenomeStats/bin/cellCoveragePlot.R', echo=TRUE)
lengths()
n50
barplot(n50)
?length
lsll
barplot(sapply(clens,mean))
target_raw_coverage = 70
smrt_cells=ceiling(genome_size*target_raw_coverage/1e9)
smrt_cells
plot(x=1:length(k0)/y=cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number",main="cmoviesoverage Increase by cell")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number",main="cmoviesoverage Increase by cell")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number",main="cmoviesoverage Increase by cell")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
lines(x=1:length(k0),y=cumsum(k8)/genome_size,type='b',col="red")
lines(x=1:length(k0),y=cumsum(k10)/genome_size,type='b',col="blue")
lines(x=1:length(k0),y=cumsum(k12)/genome_size,type='b',col="green")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylim=c(0,target_raw_coverage), ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
lines(x=1:length(k0),y=cumsum(k8)/genome_size,type='b',col="red")
lines(x=1:length(k0),y=cumsum(k10)/genome_size,type='b',col="blue")
lines(x=1:length(k0),y=cumsum(k12)/genome_size,type='b',col="green")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylim=c(0,target_raw_coverage), xlim=smrt_cells, ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='b',col="black",ylim=c(0,target_raw_coverage), xlim=c(0,smrt_cells), ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
lines(x=1:length(k0),y=cumsum(k8)/genome_size,type='b',col="red")
lines(x=1:length(k0),y=cumsum(k10)/genome_size,type='b',col="blue")
lines(x=1:length(k0),y=cumsum(k12)/genome_size,type='b',col="green")
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='l',col="black",ylim=c(0,target_raw_coverage), xlim=c(0,smrt_cells), ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
lines(x=1:length(k0),y=cumsum(k8)/genome_size,type='l',col="red")
lines(x=1:length(k0),y=cumsum(k10)/genome_size,type='l',col="blue")
lines(x=1:length(k0),y=cumsum(k12)/genome_size,type='l',col="green")
k0
esmrt <- smrt_cells - length(k0)
esmrt
sample(1:length(k0),size=esmrt,replace=T)
ek0 <- sapply(clens,function(x){
sum(x[esmrt_sample])
})
ek0 <- sapply(clens[esmrt_sample],function(x){
sum(x)
})
esmrt_sample <- sample(1:length(k0),size=esmrt,replace=T)
ek0 <- sapply(clens[esmrt_sample],function(x){
sum(x)
})
ek8 <- sapply(clens,function(x){
sum(x[x>8e3])
})
ek0 <- sapply(clens[esmrt_sample],function(x){
sum(x)
})
ek8 <- sapply(clens[esmrt_sample],function(x){
sum(x[x>8e3])
})
ek10 <- sapply(clens[esmrt_sample],function(x){
sum(x[x>10e3])
})
ek12 <- sapply(clens[esmrt_sample],function(x){
sum(x[x>12e3])
})
lines(x=length(k0)+1:smrt_cells,y=(cumsum(ek0)+tail(k0,1))/genome_size,type='l',lty=2,col="black")
length(k0)+1:smrt_cells
length(k0)
smrt_cells
smrt_cells
(length(k0)+1):smrt_cells
lines(x=(length(k0)+1):smrt_cells,y=(cumsum(ek0)+tail(k0,1))/genome_size,type='l',lty=2,col="black")
tail(k0,1)
lines(x=(length(k0)+1):smrt_cells,y=(cumsum(ek0)+tail(cumsum(k0),1))/genome_size,type='l',lty=2,col="black")
lines(x=(length(k8)+1):smrt_cells,y=(cumsum(ek8)+tail(cumsum(k8),1))/genome_size,type='l',lty=2,col="red")
lines(x=(length(k10)+1):smrt_cells,y=(cumsum(ek10)+tail(cumsum(k10),1))/genome_size,type='l',lty=2,col="blue")
lines(x=(length(k12)+1):smrt_cells,y=(cumsum(ek12)+tail(cumsum(k12),1))/genome_size,type='l',lty=2,col="green")
lines(x=(length(k0)+1):smrt_cells,y=(cumsum(ek0)+tail(cumsum(k0),1))/genome_size,type='l',lty=2,col="black")
lines(x=(length(k8)+1):smrt_cells,y=(cumsum(ek8)+tail(cumsum(k8),1))/genome_size,type='l',lty=2,col="red")
lines(x=(length(k10)+1):smrt_cells,y=(cumsum(ek10)+tail(cumsum(k10),1))/genome_size,type='l',lty=2,col="blue")
lines(x=(length(k12)+1):smrt_cells,y=(cumsum(ek12)+tail(cumsum(k12),1))/genome_size,type='l',lty=2,col="green")
clens <- tapply(sapply(json$file_data,'[[','read_lengths'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
hist(do.call('c',clens),breaks=200,xlab="Read Length",main="Read lengths of all cells")
print(infile)
mlen <- sapply(clens,function(x){
mean(x)
})
mlen
barplot(sapply(clens,mean))
barplot(sapply(clens,mean),names.arg=1:length(mean))
length(mean)
mean
barplot(sapply(clens,mean),names.arg=1:length(mlen))
n50 <- sapply(clens,function(x){
sort(x)[which(cumsum(sort(x))/sum(sort(x)) >= 0.5)[1]]
})
barplot(sapply(clens,n50),names.arg=1:length(n50),xlab="Cell Number",ylab="N50 Length",main="N50 length by cell")
barplot(sapply(clens,mlen),names.arg=1:length(mlen),xlab="Cell Number",ylab="Mean Length",main="Mean length by cell")
mlen <- sapply(clens,function(x){
mean(x)
})
barplot(sapply(clens,mlen),names.arg=1:length(mlen),xlab="Cell Number",ylab="Mean Length",main="Mean length by cell")
barplot(mlen,names.arg=1:length(mlen),xlab="Cell Number",ylab="Mean Length",main="Mean length by cell")
barplot(n50,names.arg=1:length(n50),xlab="Cell Number",ylab="N50 Length",main="N50 length by cell")
barplot(sapply(clens,length))
barplot(sapply(clens,length),names.arg=1:length(clens))
barplot(sapply(clens,length),names.arg=1:length(clens),xlab="Cell Number",ylab="sub-read count", "Subread count by Cell")
barplot(sapply(clens,length),names.arg=1:length(clens),xlab="Cell Number",ylab="sub-read count",main= "Subread count by Cell")
barplot(sapply(clens,length),names.arg=1:length(clens),xlab="Cell Number",ylab="sub-read count",main= "Subread count by Cell")
zmws <- tapply(sapply(json$file_data,'[[','zmw'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
barplot(sapply(zmws,function(x) length(unique(x))),names.arg=1:length(clens),xlab="Cell Number",ylab="sub-read count",main= "Subread count by Cell")
zmws <- tapply(sapply(json$file_data,'[[','zmw'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
zmws <- tapply(sapply(json$file_data,'[[','zmw'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
sapply(zmws,function(x) length(unique(x)))
barplot(sapply(clens,length),names.arg=1:length(clens),xlab="Cell Number",ylab="sub-read count",main= "Subread count by Cell")
zmws
sapply(zmws,length)
sapply(clens,length)
sapply(zmws,function(x) length(unique(x)))
1:length(zmws)
barplot(sapply(zmws,function(x) length(unique(x))),names.arg=1:length(zmws),xlab="Cell Number",ylab="zmw count",main= "ZMW count by Cell")
library(rjson)
infile = "input.fofn.stats"
genome_size=1.5e9
target_raw_coverage = 70
est_per_smrt_cell = 1e9
## SMRT cell still needed before achieving estimate.
smrt_cells=ceiling(genome_size*target_raw_coverage/est_per_smrt_cell)
print(infile)
## read in an input file
json <- fromJSON(file=infile)
clens <- tapply(sapply(json$file_data,'[[','read_lengths'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
## Histogram of reads lengths
hist(do.call('c',clens),breaks=200,xlab="Read Length",main="Read lengths of all cells")
## read mean length
mlen <- sapply(clens,function(x){
mean(x)
})
barplot(mlen,names.arg=1:length(mlen),xlab="Cell Number",ylab="Mean Length",main="Mean length by cell")
## read N50 length
n50 <- sapply(clens,function(x){
sort(x)[which(cumsum(sort(x))/sum(sort(x)) >= 0.5)[1]]
})
barplot(n50,names.arg=1:length(n50),xlab="Cell Number",ylab="N50 Length",main="N50 length by cell")
## Number of subreads
barplot(sapply(clens,length),names.arg=1:length(clens),xlab="Cell Number",ylab="sub-read count",main= "Subread count by Cell")
## Number of 'effective' ZMWs
zmws <- tapply(sapply(json$file_data,'[[','zmw'),sapply(json$file_data,'[[','cell_barcode'), function(x) do.call("c",x))
barplot(sapply(zmws,function(x) length(unique(x))),names.arg=1:length(zmws),xlab="Cell Number",ylab="zmw count",main= "ZMW count by Cell")
##################################################
## Coverage by cell
##################################################
k0 <- sapply(clens,function(x){
sum(x)
})
k8 <- sapply(clens,function(x){
sum(x[x>8e3])
})
k10 <- sapply(clens,function(x){
sum(x[x>10e3])
})
k12 <- sapply(clens,function(x){
sum(x[x>12e3])
})
plot(x=1:length(k0),y=cumsum(k0)/genome_size,type='l',col="black",ylim=c(0,target_raw_coverage), xlim=c(0,smrt_cells), ylab="Coverage",xlab="Cell Number",main="Coverage increase by cell")
lines(x=1:length(k0),y=cumsum(k8)/genome_size,type='l',col="red")
lines(x=1:length(k0),y=cumsum(k10)/genome_size,type='l',col="blue")
lines(x=1:length(k0),y=cumsum(k12)/genome_size,type='l',col="green")
esmrt <- smrt_cells - length(k0)
esmrt_sample <- sample(1:length(k0),size=esmrt,replace=T)
ek0 <- sapply(clens[esmrt_sample],function(x){
sum(x)
})
ek8 <- sapply(clens[esmrt_sample],function(x){
sum(x[x>8e3])
})
ek10 <- sapply(clens[esmrt_sample],function(x){
sum(x[x>10e3])
})
ek12 <- sapply(clens[esmrt_sample],function(x){
sum(x[x>12e3])
})
lines(x=(length(k0)+1):smrt_cells,y=(cumsum(ek0)+tail(cumsum(k0),1))/genome_size,type='l',lty=2,col="black")
lines(x=(length(k8)+1):smrt_cells,y=(cumsum(ek8)+tail(cumsum(k8),1))/genome_size,type='l',lty=2,col="red")
lines(x=(length(k10)+1):smrt_cells,y=(cumsum(ek10)+tail(cumsum(k10),1))/genome_size,type='l',lty=2,col="blue")
lines(x=(length(k12)+1):smrt_cells,y=(cumsum(ek12)+tail(cumsum(k12),1))/genome_size,type='l',lty=2,col="green")
####################################################################
(cumsum(ek12)+tail(cumsum(k12),1))/genome_size
(cumsum(ek12)+tail(cumsum(k12),1))/genome_size > 30x
names(json)
json$number_of_files
json$file_keys
json$file_data[[1]]
names(json$file_data[[1]])
json$file_data[[1]]$run_id
json$file_data[[1]]$cell_barcode
json$file_data[[1]]$read_count
json$file_data[[1]]$zmw
json$file_data[[1]]$read_lengths
json$file_data[[1]]$read_starts
json$file_data[[1]]$read_ends
